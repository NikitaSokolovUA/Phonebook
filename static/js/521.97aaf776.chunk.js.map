{"version":3,"file":"static/js/521.97aaf776.chunk.js","mappings":"6OAEaA,EAAYC,EAAAA,EAAAA,IAAH,qHAOTC,EAAYD,EAAAA,EAAAA,GAAH,+JASTE,EAAeF,EAAAA,EAAAA,GAAH,8J,oBCfZG,EAAgBH,EAAAA,EAAAA,IAAH,wGAqBbI,GAdOJ,EAAAA,EAAAA,KAAH,0FAKIA,EAAAA,EAAAA,MAAH,sBACOA,EAAAA,EAAAA,KAAH,uIAQDA,EAAAA,EAAAA,GAAOK,EAAAA,GAAPL,CAAH,8cAwBLM,EAAeN,EAAAA,EAAAA,OAAH,4X,UChDZO,EAAiB,SAAAC,GAAK,OAAIA,EAAMC,SAASA,SAASC,KAA5B,EACtBC,EAAe,SAAAH,GAAK,OAAIA,EAAMC,SAASG,MAAnB,EAIpBC,EAAuB,SAAAL,GAChC,IAAMC,EAAWF,EAAeC,GAC1BI,EAASD,EAAaH,GAE5B,OAAOC,EAASG,QAAO,SAAAE,GAAO,OAC9BA,EAAQC,KAAKC,cAAcC,SAASL,EAAOI,cADb,GAGjC,E,mBCLKE,EAASC,EAAAA,KAAaC,MAAM,CAChCL,KAAMI,EAAAA,KAAaE,WACnBC,OAAQH,EAAAA,KAAaE,WAAWE,IAAI,EAAG,iGAAsBC,IAAI,MA6CnE,EA1CoB,WAClB,IAIMC,GAAWC,EAAAA,EAAAA,MACXjB,GAAWkB,EAAAA,EAAAA,IAAYpB,GAgB7B,OACE,SAACJ,EAAD,WACE,SAAC,KAAD,CACEyB,cAxBgB,CACpBb,KAAM,GACNO,OAAQ,IAuBJO,iBAAkBX,EAClBY,SAnBe,SAACC,EAAD,GAAmC,IAAjBC,EAAgB,EAAhBA,UACrC,GACEvB,EAASwB,MACP,SAAAnB,GAAO,OACLA,EAAQC,KAAKC,gBAAkBe,EAAchB,KAAKC,aAD7C,IAIT,OAAOkB,MAAM,GAAD,OAAIH,EAAchB,KAAlB,gCAGdU,GAASU,EAAAA,EAAAA,IAAWJ,IACpBC,GACD,EAIG,UAKE,UAAC,KAAD,YACE,SAAC5B,EAAD,CAAOgC,KAAK,OAAOrB,KAAK,UACxB,SAAC,KAAD,CAAcA,KAAK,UACnB,SAACX,EAAD,CAAOgC,KAAK,OAAOrB,KAAK,YACxB,SAAC,KAAD,CAAcA,KAAK,YAEnB,SAACT,EAAD,CAAc8B,KAAK,SAAnB,wBAKT,ECjDYC,EAAcrC,EAAAA,EAAAA,GAAH,gHAOXsC,EAActC,EAAAA,EAAAA,GAAH,0KASXuC,EAASvC,EAAAA,EAAAA,EAAF,gGAKPwC,EAAgBxC,EAAAA,EAAAA,KAAH,qEAKbyC,EAAWzC,EAAAA,EAAAA,OAAF,+Y,UCiBtB,EAjCoB,WAClB,IAAMyB,GAAWC,EAAAA,EAAAA,MACXgB,GAAmBf,EAAAA,EAAAA,IAAYd,GAUrC,OARA8B,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAa,IAAIC,gBAIvB,OAFApB,GAASqB,EAAAA,EAAAA,IAAcF,IAEhB,kBAAMA,EAAWG,OAAjB,CACR,GAAE,CAACtB,KAGF,SAACY,EAAD,UACGK,EAAiBM,KAAI,YAA2B,IAAxBC,EAAuB,EAAvBA,GAAIlC,EAAmB,EAAnBA,KAAMO,EAAa,EAAbA,OACjC,OACE,UAACgB,EAAD,YACE,UAACC,EAAD,WACGxB,EADH,KACS,SAACyB,EAAD,UAAgBlB,QAEzB,SAACmB,EAAD,CACEL,KAAK,SACLc,QAAS,kBAAMzB,GAAS0B,EAAAA,EAAAA,IAAcF,GAA7B,EAFX,uBAJgBA,EAYrB,KAGN,ECzCYG,EAAkBpD,EAAAA,EAAAA,IAAH,gHAOfqD,EAAYrD,EAAAA,EAAAA,KAAH,oKASTsD,EAActD,EAAAA,EAAAA,MAAH,se,UCaxB,EA1Be,WACb,IAAMyB,GAAWC,EAAAA,EAAAA,MACXd,GAASe,EAAAA,EAAAA,IAAYhB,GAM3B,OACE,SAACyC,EAAD,WACE,8BACE,SAACC,EAAD,qCACA,SAACC,EAAD,CACElB,KAAK,OACLrB,KAAK,SACLwC,QAAQ,yHACRC,MAAM,yIACNnC,UAAQ,EACRoC,MAAO7C,EACP8C,SAfa,SAAAC,GACnBlC,GAASmC,EAAAA,EAAAA,GAAkBD,EAAEE,OAAOJ,OACrC,QAkBF,ECXD,EAdiB,WACf,OACE,+BACE,UAAC1D,EAAD,YACE,SAACE,EAAD,yBACA,SAAC,EAAD,KACA,SAACC,EAAD,wBACA,SAAC,EAAD,KACA,SAAC,EAAD,QAIP,C","sources":["pages/Contacts/Contacts.styled.jsx","components/ContactForm/ContactForm.styled.jsx","redux/selectors.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  width: 1200px;\n  margin-left: auto;\n  margin-right: auto;\n  background-color: #dcdcdc;\n`;\n\nexport const MainTitle = styled.h1`\n  text-align: center;\n  margin-bottom: 30px;\n  padding-top: 20px;\n  font-size: 40px;\n  letter-spacing: 0.06em;\n  color: #50c878;\n`;\n\nexport const ContactTitle = styled.h2`\n  text-align: center;\n  margin-top: 20px;\n  margin-bottom: 30px;\n  font-size: 30px;\n  letter-spacing: 0.06em;\n  color: #50c878;\n`;\n","import styled from '@emotion/styled';\nimport { Field } from 'formik';\n\nexport const FormContainer = styled.div`\n  width: 400px;\n  padding: 20px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n`;\nexport const Label = styled.label``;\nexport const LabelName = styled.span`\n  margin-left: 40px;\n  margin-bottom: 5px;\n  display: block;\n  color: #757575;\n  letter-spacing: 0.03em;\n`;\n\nexport const Input = styled(Field)`\n  margin-left: 40px;\n  padding-left: 20px;\n  width: 80%;\n  height: 40px;\n  border: 1px solid rgba(33, 33, 33, 0.2);\n  border-radius: 4px;\n  font-size: 20px;\n  letter-spacing: 0.06em;\n  transition: border 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :focus-within {\n    border: 1px solid #2196f3;\n  }\n  :focus-visible {\n    border: 1px solid #2196f3;\n    outline: none;\n  }\n\n  :first-of-type {\n    margin-bottom: 40px;\n  }\n`;\n\nexport const SubmitButton = styled.button`\n  display: block;\n  margin-top: 20px;\n  margin-left: auto;\n  margin-right: auto;\n\n  width: 200px;\n  height: 50px;\n  border: none;\n  border-radius: 5px;\n  color: white;\n  background-color: #2f4f4f;\n  cursor: pointer;\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  :hover,\n  :focus {\n    background-color: #2196f3;\n  }\n`;\n","export const selectContacts = state => state.contacts.contacts.items\nexport const selectFilter = state => state.contacts.filter\nexport const selectIsLoading = state => state.contacts.contacts.isLoading\nexport const selectError = state => state.contacts.contacts.error\n\nexport const selectFilterContacts = state => {\n    const contacts = selectContacts(state);\n    const filter = selectFilter(state);\n\n    return contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase())\n  );\n}","import { Formik, Form, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\nimport { FormContainer, Input, SubmitButton } from './ContactForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/selectors';\nimport { addContact } from 'redux/operations';\n\nconst schema = yup.object().shape({\n  name: yup.string().required(),\n  number: yup.string().required().min(7, 'минимум 7 символов').max(20),\n});\n\nconst ContactForm = () => {\n  const InitialValues = {\n    name: '',\n    number: '',\n  };\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const onSubmitForm = (InitialValues, { resetForm }) => {\n    if (\n      contacts.find(\n        contact =>\n          contact.name.toLowerCase() === InitialValues.name.toLowerCase()\n      )\n    ) {\n      return alert(`${InitialValues.name} is already in contact list`);\n    }\n\n    dispatch(addContact(InitialValues));\n    resetForm();\n  };\n\n  return (\n    <FormContainer>\n      <Formik\n        initialValues={InitialValues}\n        validationSchema={schema}\n        onSubmit={onSubmitForm}\n      >\n        <Form>\n          <Input type=\"text\" name=\"name\" />\n          <ErrorMessage name=\"name\" />\n          <Input type=\"text\" name=\"number\" />\n          <ErrorMessage name=\"number\" />\n\n          <SubmitButton type=\"submit\">Save</SubmitButton>\n        </Form>\n      </Formik>\n    </FormContainer>\n  );\n};\n\nexport default ContactForm;\n","import styled from \"@emotion/styled\";\n\n\nexport const ListContact = styled.ul`\n    width: 400px;\n    padding: 10px;\n    margin-left: auto;\n    margin-right: auto;\n`\n\nexport const ContactItem = styled.li`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n\n    :not(:last-child){\n        margin-bottom: 10px;\n    }\n`\nexport const Contact =styled.p`\n    font-size: 20px;\n    letter-spacing: 0.03em;\n    color: #778899;\n`\nexport const ContactNumber = styled.span`\n    margin-left: 20px;\n    color: #2F4F4F;\n`\n\nexport const DeleteBtn =styled.button`\n    width: 100px;\n    height: 30px;\n    border: none;\n    border-radius: 5px;\n    font-size: 14px;\n    letter-spacing: 0.03em;\n    cursor: pointer;\n    transition: background-color  250ms cubic-bezier(0.4, 0, 0.2, 1);\n    transition: color  250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n    :hover, :focus{\n        background-color: #2196F3;\n        color: white;\n    }\n`\n","import {\n  ContactItem,\n  ListContact,\n  Contact,\n  ContactNumber,\n  DeleteBtn,\n} from './ContactList.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from 'redux/operations';\nimport { selectFilterContacts } from 'redux/selectors';\nimport { fetchContacts } from 'redux/operations';\nimport { useEffect } from 'react';\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n  const filteredContacts = useSelector(selectFilterContacts);\n\n  useEffect(() => {\n    const controller = new AbortController();\n\n    dispatch(fetchContacts(controller));\n\n    return () => controller.abort();\n  }, [dispatch]);\n\n  return (\n    <ListContact>\n      {filteredContacts.map(({ id, name, number }) => {\n        return (\n          <ContactItem key={id}>\n            <Contact>\n              {name} <ContactNumber>{number}</ContactNumber>\n            </Contact>\n            <DeleteBtn\n              type=\"button\"\n              onClick={() => dispatch(deleteContact(id))}\n            >\n              Deleted\n            </DeleteBtn>\n          </ContactItem>\n        );\n      })}\n    </ListContact>\n  );\n};\n\nexport default ContactList;\n","import styled from \"@emotion/styled\";\n\n\nexport const SearchContainer = styled.div`\n    width: 400px;\n    padding: 10px;\n    margin-left: auto;\n    margin-right: auto;\n`\n\nexport const TextTitle = styled.span`\n    display: block;\n    margin-bottom: 10px;\n    margin-left: 40px;\n    color: #000;\n    font-size: 20px;\n    letter-spacing: 0.06em;\n`\n\nexport const SearchInput = styled.input`\ndisplay: block;\n    margin-left: auto;\n    margin-right: auto;\n    padding-left: 20px;\n    width: 80%;\n    height: 40px;\n    border: 1px solid rgba(33, 33, 33, 0.2);\n    border-radius: 4px;\n    transition: border 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    font-size: 20px;\n    letter-spacing: 0.06em;\n\n    :focus-within{\n        border: 1px solid #2196F3;\n    }\n    :focus-visible{\n        border: 1px solid #2196F3;\n        outline: none;\n    }\n`","import React from 'react';\nimport { SearchContainer, SearchInput, TextTitle } from './Filter.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getFilterContacts } from 'redux/contactsSlice';\nimport { selectFilter } from 'redux/selectors';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  const handleChange = e => {\n    dispatch(getFilterContacts(e.target.value));\n  };\n\n  return (\n    <SearchContainer>\n      <label>\n        <TextTitle>Find Contacts by Name</TextTitle>\n        <SearchInput\n          type=\"text\"\n          name=\"filter\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          value={filter}\n          onChange={handleChange}\n        />\n      </label>\n    </SearchContainer>\n  );\n};\n\nexport default Filter;\n","import { ContactTitle, Container, MainTitle } from './Contacts.styled';\nimport ContactForm from 'components/ContactForm';\nimport ContactList from 'components/ContactList';\nimport Filter from 'components/Filter';\n\nconst Contacts = () => {\n  return (\n    <>\n      <Container>\n        <MainTitle>PHONEBOOK</MainTitle>\n        <ContactForm />\n        <ContactTitle>CONTACTS</ContactTitle>\n        <Filter />\n        <ContactList />\n      </Container>\n    </>\n  );\n};\n\nexport default Contacts;\n"],"names":["Container","styled","MainTitle","ContactTitle","FormContainer","Input","Field","SubmitButton","selectContacts","state","contacts","items","selectFilter","filter","selectFilterContacts","contact","name","toLowerCase","includes","schema","yup","shape","required","number","min","max","dispatch","useDispatch","useSelector","initialValues","validationSchema","onSubmit","InitialValues","resetForm","find","alert","addContact","type","ListContact","ContactItem","Contact","ContactNumber","DeleteBtn","filteredContacts","useEffect","controller","AbortController","fetchContacts","abort","map","id","onClick","deleteContact","SearchContainer","TextTitle","SearchInput","pattern","title","value","onChange","e","getFilterContacts","target"],"sourceRoot":""}